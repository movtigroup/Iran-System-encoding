Metadata-Version: 2.4
Name: iran-encoding
Version: 0.2.0
Summary: Two-stage encoding for Persian text.
Home-page: https://github.com/example/iran-encoding
Author: Jules
Author-email: jules@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Text Processing :: General
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: websockets>=10.0
Requires-Dist: arabic_reshaper
Requires-Dist: python-bidi
Requires-Dist: jdatetime
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Iran System Encoding Library

A Python library for Iran System character encoding, supporting multiple languages, advanced date utilities, and cross-platform bindings.

## Features

- Comprehensive Iran System encoding and decoding.
- Support for Persian, Arabic, Kurdish, and Tati languages.
- Advanced date and time utilities.
- JavaScript and C++ bindings.

## Usage

### Encoding and Decoding

```python
from iran_encoding.core import IranSystemEncoder

text = "Hello, World!"
encoded_bytes = IranSystemEncoder().encode(text)
decoded_text = IranSystemEncoder().decode(encoded_bytes)
assert decoded_text == text
```

### Date and Time Conversion

```python
from iran_encoding.utils import PersianDateTime

gregorian_date = "2025-08-30"
persian_date = PersianDateTime().convert(gregorian_date, lang='en')
print(persian_date)  # Output: 8 Shahrivar 1404
```

## Contributing

1. Clone the repository.
2. Install dependencies.
3. Run tests.
4. Fork and submit a pull request.

## License

MIT License
